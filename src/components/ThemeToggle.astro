<button
  class="p-1.5 outline outline-1 outline-black dark:outline-white"
  id="themeToggle"
>
  <!-- <p class="dark:hidden">☾</p><p class="hidden dark:inline">☀</p> -->
  <svg
    width="12"
    height="12"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    ><path
      fill="currentColor"
      d="M12 22q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22"
    ></path></svg
  >
</button>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");

    console.log(localStorage.getItem("theme"));
  };

  const setDarkMode = () => {
    const theme = localStorage.getItem("theme");
    const element = document.documentElement;
    if (theme === "dark") {
      element.classList.add("dark");
    } else {
      element.classList.remove("dark");
    }
  };

  const init = () => {
    document
      .getElementById("themeToggle")
      .addEventListener("click", handleToggleClick);
  };

  init();

  document.addEventListener("astro:after-swap", () => {
    setDarkMode();
    init();
  });
</script>
